plugins {
    id 'java'
    id 'java-library'
    id 'net.minecrell.plugin-yml.bukkit' version '0.6.0'
}

group 'fns'
version '1.0.0'

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'net.minecrell.plugin-yml.bukkit'

    repositories {
        jcenter()
        mavenCentral()

        maven {
            name = 'Paper'
            url = 'https://repo.papermc.io/repository/maven-snapshots/'
        }

        maven {
            name = "Aikar"
            url = 'https://repo.aikar.co/content/groups/aikar/'
        }

        maven {
            name = "JitPack"
            url = 'https://jitpack.io'
        }
    }

    bukkit {
        apiVersion = "1.20"
        authors = {"allinkdev", 
                   "Paldiu", 
                   "evallll", 
                   "FlorianMichael/EnZaXD", 
                   "VideoGameSmash12"}
    }

    dependencies {
        compileOnly 'io.papermc.paper:paper-api:1.20.1-R0.1-SNAPSHOT'
        compileOnly 'org.javassist:javassist:3.29.1-GA'
        compileOnly 'org.apache.commons:commons-lang3:3.12.0'
        compileOnly 'org.apache.commons:commons-collections4:4.2'
        compileOnly 'com.google.guava:guava:31.1-jre'
        compileOnly 'com.google.code.gson:gson:2.8.8'
        compileOnly 'io.github.classgraph:classgraph:4.8.162'
        compileOnly 'org.slf4j:slf4j-api:1.7.36'
    }

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    test {
        useJUnitPlatform()
    }

    var weight = -1;

    afterEvaluate {
        if (weight == -1) {
            weight = 0
        }
    }

    javadoc {
        options {
            encoding = 'UTF-8'
        }
    }
}

tasks.register('buildChain') {
    dependsOn subprojects.sort {
        a, b -> a.properties.weight <=> b.properties.weight
    }.collect {
        ":${it.path}:build"
    }
}
